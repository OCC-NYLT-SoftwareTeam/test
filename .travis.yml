language: cpp
compiler: gcc

sudo: false
dist: trusty
# Blacklist
branches:
  except:
    - gh-pages
    
# Environment variables
env:
  global:
    - GH_REPO_NAME: BigBlueBox
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/rbaker26/BigBlueBox.git
    
# Install dependencies
addons:
  apt:
    packages:
      - doxygen
      - doxygen-doc
      - doxygen-latex
      - doxygen-gui
      - graphviz
    
before_install:
 - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
 - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
 - sudo apt-get update -qq
 - sudo apt-get install qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev
 - sudo apt-get install qt5-default qttools5-dev-tools
 #- pip install --user cpp-coveralls

install:
 - sudo apt-get update
 - sudo apt-get install qt5-default qttools5-dev-tools
 - sudo apt-get install -qq g++-5
 - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90
 
script:
 # This will make the coverage reports. 
 #- ./build.sh
 - qmake src/BigBlueBox.pro
 - make
 - ./BigBlueBox
 - ./get_code_cov.sh

 # This will build and run teh program with unit tests
 # It will then display the results of the unit tests.
 - qmake "CONFIG+=test" src/BigBlueBox.pro #we gonna compile for Unit test first
 - make
 - ./BigBlueBox #run unit test
 - rm Makefile BigBlueBox *.o #remove files (which are generated from unit test) for next build
 
 
 # This will build the project without tests.
 - qmake -project
 - qmake src/BigBlueBox.pro
 - make


after_success:
  # Coverage Report
  - bash <(curl -s https://codecov.io/bash)
  # Generate and deploy documentation
  - cd $TRAVIS_BUILD_DIR
  - chmod +x generateDocumentationAndDeploy.sh
  - ./generateDocumentationAndDeploy.sh
